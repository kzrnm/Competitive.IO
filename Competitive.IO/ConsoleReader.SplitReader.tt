<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
var defined = new (string Type, string Name)[]{
    ("string", "String"),
    ("string", "Ascii"),
    ("int", "Int"),
    ("int", "Int0"),
    ("long", "Long"),
    ("long", "Long0"),
    ("double", "Double"),
};
var implicits = new (string Type, string Name)[]{
    ("string", "Ascii"),
    ("int", "Int"),
    ("long", "Long"),
    ("double", "Double"),
};
#>
// <auto-generated>
// This code was generated by T4 template. Do not change this code.
// </auto-generated>
using System.Collections.Generic;

namespace Kzrnm.Competitive.IO
{
    public struct SplitReader
    {
        readonly ConsoleReader cr;
        internal SplitReader(ConsoleReader cr) { this.cr = cr; }
<# foreach(var p in defined) { #>
        public <#= p.Type #>[] <#= p.Name #>()
        {
            while (cr.buffer[cr.pos] <= 32)
                cr.MoveNext();
            var l = new List<<#= p.Type #>>();
            do
            {
                if (cr.buffer[cr.pos] < 32) cr.MoveNext();
                else l.Add(cr.<#= p.Name #>());
            } while (cr.buffer[cr.pos] != 10 && cr.buffer[cr.pos] != 13);
            return l.ToArray();
        }
<# } #>

<# foreach(var p in implicits) { #>
        public static implicit operator <#= p.Type #>[](SplitReader sr) => sr.<#= p.Name #>();
<# } #>
    }
}
